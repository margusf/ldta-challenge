MODULE Simple;
	CONST globConst = 555;

	VAR globInt: INTEGER;

    PROCEDURE Test(x: INTEGER; o: BOOLEAN);
   		CONST
			yy = 30;
   		VAR
            z: INTEGER;

		PROCEDURE Inner(y: INTEGER; VAR foo: INTEGER);
		BEGIN
			foo := y + x;
			FOR y := 1 TO 10 DO
				foo := y
			END;
			WHILE z = 2 DO
				FOR y := 10 TO 1 BY -10 DO
					foo := yy
				END
			END;
			Write(z);
			Write(o)
		END Inner;

		PROCEDURE InnerCase();
			VAR
				something: INTEGER;
		BEGIN
			CASE 1 + z OF
				3:
					Write(3)
			END
		END InnerCase;

    BEGIN
        z := x + 20 * x + 4 * (4 + (-3));
		Inner(x, x);
		InnerCase;
		IF o THEN
			z := 10
		ELSIF z = 0 THEN
			z := 11
		ELSE
			z := 12
		END;
		IF o THEN
			z := 10
		END
    END Test;
BEGIN
	Test(10, 1 = 1);
	IF 10 = 10 THEN
		CASE 10 OF
			1:
				Write(1)
			| 2, 3:
				Write(23)
			| 4..5:
				Write(45)
			| 5..6, 7..8, 9:
				Write(56);
				Write(78);
				Write(9)
			ELSE
				Write(111)
		END
	END
END Simple.
